// Prisma schema file (schema.prisma)

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId    Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String   
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]  @relation("UserOrders")
  carts     Cart[]   @relation("UserCarts")
}

model Product {
  productId   Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  cartItems   CartItem[] 

}

model Order {
  orderId   Int       @id @default(autoincrement())
  orderDate DateTime  @default(now())
  status    String   
  userId    Int       // Foreign key referencing User

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user      User      @relation("UserOrders", fields: [userId], references: [userId])
}

model Cart {
  cartId               Int       @id @default(autoincrement())
  userId               Int       // Foreign key referencing User
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  subtotal             Float     @default(0)  //price before discount
  totalPrice           Float     @default(0)  //price after discount
  promoCodeMultiplier  Float     @default(1)

  user      User      @relation("UserCarts", fields: [userId], references: [userId])

  cartItems CartItem[]
}


model CartItem {
  cartItemId Int     @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int
  price      Float
  totalPrice Float    @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  cart       Cart      @relation(fields: [cartId], references: [cartId])
  product    Product   @relation(fields: [productId], references: [productId])
}
